name: CI

on: push

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: ['12', '10']
    steps:
    - uses: actions/checkout@v2
    - name: Use Node ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - run: yarn install --frozen-lockfile --check-files
    - run: yarn lint
    - run: yarn type-check
    - run: yarn test --coverage --coverageReporters=text-lcov | npx coveralls
      env:
        COVERALLS_REPO_TOKEN: ${{ secrets.COVERALLS_REPO_TOKEN }}
    - uses: amondnet/now-deployment@v2
      id: deployment
      with:
        zeit-token: ${{ secrets.ZEIT_TOKEN }}
        github-token: ${{ secrets.GITHUB_TOKEN }}
        now-org-id: ${{ secrets.ORG_ID}}
        now-project-id: ${{ secrets.PROJECT_ID}}
    # - name: Wait for Now Deployment
    #   id: wait-for-now
    #   run: |
    #     NOW_URL=$(npx now --token $ZEIT_TOKEN ls wyze.github.io 2> /dev/null | sed -n 2p | tr -s ' ' | cut -d ' ' -f 3)
    #     sed -i.bak "s@{{ NOW_URL }}@https://$NOW_URL@g" codechecks.yml
    #     echo "::set-output name=now-url::https://$NOW_URL"

    #     while [ $MAX_TRIES -gt 0 ]
    #     do
    #       STATUS=$(npx now --token $ZEIT_TOKEN inspect $NOW_URL 2>&1 | grep READY | head -c1 | wc -c)
    #       if [ $STATUS -gt 0 ]; then
    #         exit 0
    #       else
    #         MAX_TRIES=$((MAX_TRIES - 1))
    #       fi
    #       sleep $SECONDS_BETWEEN_CHECKS
    #     done

    #     exit 1
    #   env:
    #     MAX_TRIES: 20
    #     SECONDS_BETWEEN_CHECKS: 30
    #     ZEIT_TOKEN: ${{ secrets.ZEIT_TOKEN }}
    - name: Audit using Lighthouse
      uses: treosh/lighthouse-ci-action@v2
      with:
        urls: |
          ${{ steps.deployment.outputs.preview-url }}
    - name: Post Lighthouse Status
      uses: manrueda/lighthouse-report-action@v1.1.1
      with:
        reports: '.lighthouseci'
        github-token: ${{ secrets.GITHUB_TOKEN }}
